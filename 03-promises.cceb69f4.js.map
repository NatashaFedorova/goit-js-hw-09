{"mappings":"iiBAAAA,EAAA,S,iBAGMC,EAAO,GACTC,EAAW,EAETC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASG,iBAAiB,UAuBvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAEFU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUC,EAAKE,EAALF,MACjBI,EAAAC,GAASC,OAAOC,QAAQ,sBAAqCC,OAAfL,EAAS,QAAYK,OAANR,EAAM,M,IAEpES,OAAM,SAAAP,G,IAAGQ,EAAQR,EAARH,SAAUC,EAAKE,EAALF,MAClBI,EAAAC,GAASC,OAAOK,QAAQ,qBAAoCH,OAAfE,EAAS,QAAYF,OAANR,EAAM,M,IAnCxEjB,EAAKC,KAAK4B,iBAAiB,SAG3B,SAAqBC,GAKnB,OAJAA,EAAEC,OAAOC,MAAQ,EACZF,EAAEC,OAAOC,MAAQ,EACjBlC,EAAKgC,EAAEC,OAAOE,MAAQC,OAAOJ,EAAEC,OAAOC,OAEpClC,C,IAPTE,EAAKC,KAAK4B,iBAAiB,UAU3B,SAAsBC,GAEpB,IADAA,EAAEK,iBACGpC,EAAW,EAAGA,GAAYD,EAAKsC,OAAQrC,GAAY,EACtDO,EAAcP,EAAUD,EAAKmB,OAC7BnB,EAAKmB,OAASnB,EAAKuC,KAErBC,QAAQC,IAAIzC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import 'notiflix/dist/notiflix-aio-3.2.5.min.js';\nimport Notiflix from 'notiflix';\n\nconst form = {};\nlet position = 0;\n\nconst refs = {\n  form: document.querySelector('.form'),\n  formInput: document.querySelectorAll('input'),\n};\n\nrefs.form.addEventListener('input', onInputForm);\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onInputForm(e) {\n  e.target.value < 0\n    ? (e.target.value = 0)\n    : (form[e.target.name] = Number(e.target.value));\n\n  return form;\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  for (position = 1; position <= form.amount; position += 1) {\n    createPromise(position, form.delay);\n    form.delay += form.step;\n  }\n  console.log(form);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n    });\n}\n// приклад=====================================\n// let result = 20000;\n// function showNumber(num) {\n//   result -= num;\n//   console.log(result);\n//   if (result === 0) {\n//     clearInterval(timeId);\n//   }\n// }\n// let timeId = setInterval(showNumber, 1000, 1000);\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$refs","form","document","querySelector","formInput","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","position2","$parcel$interopDefault","$iU1Pc","Notify","success","concat","catch","position3","failure","addEventListener","e","target","value","name","Number","preventDefault","amount","step","console","log"],"version":3,"file":"03-promises.cceb69f4.js.map"}